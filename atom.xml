<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[mochiz blog]]></title>
  <link href="http://mochiz.github.com/atom.xml" rel="self"/>
  <link href="http://mochiz.github.com/"/>
  <updated>2013-03-24T00:00:16+09:00</updated>
  <id>http://mochiz.github.com/</id>
  <author>
    <name><![CDATA[hiroshi asakura]]></name>
    <email><![CDATA[mochi.hiro43@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HerokuのHTTPサーバをUnicornに変更する]]></title>
    <link href="http://mochiz.github.com/blog/2013-03-13-heroku-rails-unicorn/"/>
    <updated>2013-03-13T05:41:00+09:00</updated>
    <id>http://mochiz.github.com/blog/heroku-rails-unicorn</id>
    <content type="html"><![CDATA[<p><a href="">WEB+DB PRESS vol.70</a>の&#8221;実践Rails高速化&#8221;特集などでも取り上げられている</p>

<h2><a href="http://unicorn.bogomips.org/">Unicorn</a>とは</h2>

<p>Rackアプリ向けのモダンでイケてるHTTPサーバです。<br/>
Unicornってまず名前がいいですよね、デストロイモードになりそう、なったら困るけど。<br/>
何が素晴らしいのかとかはお母さんにでも聞いて下さい。</p>

<p><a href="https://devcenter.heroku.com/articles/rails-unicorn">Herokuの公式サイト</a>に掲載された手順に従って設定してみます。</p>

<h2>1. Gemをインストールする</h2>

<p>まずはいつものとおりgemインストールからです。<br/>
Gemfileにunicornを追加してbundleインストールしましょう。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem 'unicorn'</span></code></pre></td></tr></table></div></figure>


<p>run <code>$ bundle install</code></p>

<h2>2. コンフィグを作成する</h2>

<p>次にUnicorn用のコンフィグを作成します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ touch config/unicorn.rb</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#config/unicorn.rb
</span><span class='line'>worker_processes 3
</span><span class='line'>timeout 30
</span><span class='line'>preload_app true
</span><span class='line'>
</span><span class='line'>before_fork do |server, worker|
</span><span class='line'>
</span><span class='line'>  Signal.trap 'TERM' do
</span><span class='line'>    puts 'Unicorn master intercepting TERM and sending myself QUIT instead'
</span><span class='line'>    Process.kill 'QUIT', Process.pid
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  defined?(ActiveRecord::Base) and
</span><span class='line'>    ActiveRecord::Base.connection.disconnect!
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>after_fork do |server, worker|
</span><span class='line'>
</span><span class='line'>  Signal.trap 'TERM' do
</span><span class='line'>    puts 'Unicorn worker intercepting TERM and doing nothing. Wait for master to sent QUIT'
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  defined?(ActiveRecord::Base) and
</span><span class='line'>    ActiveRecord::Base.establish_connection
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>3. Procfileを変更する</h2>

<p>プロセスをUnicornで立ち上げるため、Procfileを変更します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>web: bundle exec unicorn -p $PORT -c ./config/unicorn.rb</span></code></pre></td></tr></table></div></figure>


<p>※ローカルで試す場合は次のコマンドからどうぞ <code>$ foreman start</code>.</p>

<h2>Herokuへデプロイする</h2>

<p>Herokuへデプロイ後、プロセスコマンドで確認しましょう。<br/>
ちゃんとUnicornでwebプロセスが起動しているようですね。ヒヒーン</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku ps
</span><span class='line'>=== web: `bundle exec unicorn -p $PORT -c ./config/unicorn.rb`
</span><span class='line'>web.1: up 2013/03/13 04:00:30 (~ 1h ago)</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<ul>
<li>gemをインストールする</li>
<li>configを作成する</li>
<li>Procfileを変更する</li>
</ul>


<p>3ステップで変更できました。とても簡単ですね。<br/>
Railsのエコシステムは素晴らしくて、本当ありがたいです。</p>

<h2>URLs</h2>

<ul>
<li><a href="http://unicorn.bogomips.org/">Unicorn: Rack HTTP server for fast clients and Unix</a></li>
<li><a href="https://blog.heroku.com/archives/2013/2/27/unicorn_rails">Heroku | Adding Concurrency to Rails Apps with Unicorn</a></li>
<li><a href="https://devcenter.heroku.com/articles/rails-unicorn">Deploying Rails Applications With Unicorn | Heroku Dev Center</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppStoreのレビューをデイリーメールしてくれるAppBotがべんり]]></title>
    <link href="http://mochiz.github.com/blog/2013-03-05-app-bot/"/>
    <updated>2013-03-05T12:45:00+09:00</updated>
    <id>http://mochiz.github.com/blog/app-bot</id>
    <content type="html"><![CDATA[<p><a href="http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today">iOS Development Tips I Would Want If I Was Starting Out Today</a>の、&#8221;Track Reviews&#8221;より</p>

<p>アプリのレビューをトラッキングするのに、<a href="http://appbot.co/">AppBot</a>が良い感じでした。</p>

<p><a href="http://appbot.co">
<img src="https://f.cloud.github.com/assets/217503/219818/81c17ab6-8545-11e2-9e68-682c5924dc5e.png" width="700">
</a></p>

<p><a href="http://appbot.co/">AppBot</a>はAppStoreのレビューをデイリーメールしてくれるサービスです。<br/>
全てのマーケットのレビューをまとめてくれるので、レビューを監視する手間を省いてくれます。<br/>
サインアップは無料です。</p>

<p><img src="https://f.cloud.github.com/assets/217503/219822/b9fe017e-8545-11e2-93c3-8493f54ae8b1.png" width="700"></p>

<p>利用はとても簡単で、メールアドレス登録後、アプリをキーワード検索&amp;登録するだけです。<br/>
自分のアプリ以外も登録可能です。</p>

<p><img src="https://f.cloud.github.com/assets/217503/219825/d59d32b0-8545-11e2-9c5f-7bfafabd5169.png" width="700"></p>

<p>メールだけでなく、サイトから直接レビューを確認することもできます。</p>

<p><img src="https://f.cloud.github.com/assets/217503/219827/ddd2b5fe-8545-11e2-93fb-bbea7df05f40.png" width="700"></p>

<p>登録後、翌朝こんな感じでメールが届きます。（皆さんステマありがとうございます）<br/>
複数のマーケットのレビューをまとめてくれるところがありがたいですね。</p>

<h2>おわりに</h2>

<p>アプリレビューのトラッキングを省力化してくれる素敵なサービスAppBotの紹介でした。</p>

<p>今回、カリフォルニア在住の知人にもダウンロードしてもらえるよう、en|jpでリリースしたのですが、アプリのUIが日本語だったので英国の方から「英語じゃないと意味分からないよ」と2つ星をいただいてしまいました。キーワードの多言語対応も追々やって行きたい気持ちです。</p>

<p>今後も便利なサービスを利用して、素敵なアプリをつくっていきたいです。</p>

<h2>URLs</h2>

<ul>
<li><a href="http://appbot.co/">AppBot - App Store reviews and features emailed straight to your inbox.</a></li>
<li><a href="http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today">iOS Development Tips I Would Want If I Was Starting Out Today</a></li>
<li><a href="http://mochiz.github.com/blog/2013-02-27-modern-ios-development-18tips/">モダンなiOS開発のための18のTips - mochiz blog</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButtonをtoggle表示できるようにする]]></title>
    <link href="http://mochiz.github.com/blog/2013-03-01-toggle-uibutton-state-when-pressing-like-a-switch/"/>
    <updated>2013-03-01T23:16:00+09:00</updated>
    <id>http://mochiz.github.com/blog/toggle-uibutton-state-when-pressing-like-a-switch</id>
    <content type="html"><![CDATA[<p>stackoverflowより</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setState:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">UIButton</span><span class="o">*</span> <span class="n">button</span> <span class="o">=</span> <span class="p">(</span><span class="n">UIButton</span><span class="o">*</span><span class="p">)</span><span class="n">sender</span><span class="p">;</span>
</span><span class='line'>    <span class="n">button</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="o">!</span><span class="n">button</span><span class="p">.</span><span class="n">selected</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>複数のボタンから呼び出せるので便利</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">tapAlphaButton:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">setState:</span><span class="n">sender</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">tapBetaButton:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">setState:</span><span class="n">sender</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>URLs</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/3300534/toggle-uibutton-state-when-pressing-like-a-switch">iphone - toggle UIButton-state when pressing, like a switch - Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Storyboardでボタンタップ時の画像を設定する]]></title>
    <link href="http://mochiz.github.com/blog/2013-03-01-different-image-when-button-from-storyboard-tapped/"/>
    <updated>2013-03-01T23:06:00+09:00</updated>
    <id>http://mochiz.github.com/blog/different-image-when-button-from-storyboard-tapped</id>
    <content type="html"><![CDATA[<p>stackoverflowより</p>

<p><img src="https://f.cloud.github.com/assets/217503/209743/ef7a403e-8279-11e2-8329-ce7a11c6114d.png" alt="" /></p>

<p><code>Attributes Inspector</code>で、<code>State Config</code>ごとに画像を設定できます。<br/>
タップ時の画像は<code>Highlighted</code>で、選択時の画像は<code>Selected</code>で設定できます。</p>

<h2>URLs</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/12150614/different-image-when-button-from-storyboard-tapped">objective c - Different image when button from storyboard tapped - Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS Selectors: Child と Descendant の違い]]></title>
    <link href="http://mochiz.github.com/blog/2013-03-01-css-child-vs-descendant-selectors/"/>
    <updated>2013-03-01T00:33:00+09:00</updated>
    <id>http://mochiz.github.com/blog/css-child-vs-descendant-selectors</id>
    <content type="html"><![CDATA[<p>stackoverflowの解答がわかりやすかったのでメモ。</p>

<blockquote><p>Just think of what the words &#8220;child&#8221; and &#8220;descendant&#8221; mean in English:</p><p>- My daughter is both my child and my descendant<br/>- My granddaughter is not my child, but she is my descendant.</p></blockquote>


<ul>
<li>私の娘は私の<code>child</code>であり<code>descendant</code>でもある</li>
<li>私の孫娘は私の<code>child</code>ではないが、私の<code>descendant</code>である</li>
</ul>


<p>どちらも子要素に適用されるというのは認識してたけど、よくわからなくてDescendantばかり使っていました。<br/>
なるほどなるほどー</p>

<h2>URLs</h2>

<p><a href="http://stackoverflow.com/questions/1182189/css-child-vs-descendant-selectors">CSS Child vs Descendant selectors - Stack Overflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[モダンなiOS開発のための18のTips]]></title>
    <link href="http://mochiz.github.com/blog/2013-02-27-modern-ios-development-18tips/"/>
    <updated>2013-02-27T14:36:00+09:00</updated>
    <id>http://mochiz.github.com/blog/modern-ios-development-18tips</id>
    <content type="html"><![CDATA[<h2>2013/03/01更新</h2>

<p><a href="http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today">iOS Development Tips I Would Want If I Was Starting Out Today</a>の自分用メモ。</p>

<ul>
<li>ARCを使う（Use ARC!）</li>
<li>可能であればBlocksを使う（Prefer Blocks Where Possible）</li>
<li>ブロック利用時のRetainサイクルに注意する（Beware Of Retain Cycles With Blocks）</li>
<li>スレッドを忘れず、GCD（Grand Central Dispatch）を使う（Forget Threads, Use GCD）</li>
<li>Singletons と Shared Objectsを使う（Singletons / Shared Objects）</li>
<li>ストーリーボードは試作段階だけに留める（Story Boards Are Just For Rapid Prototypes）</li>
<li>インターフェースビルダーは基本的なレイアウトにのみ使う（Only Use XIBs For Very Basic Layouts）</li>
<li>プロジェクトを整理し続ける（Keep Your Project Organised）</li>
<li>便利なオープンソースを利用する（Embrace Open Source）</li>
<li>CocoaPodsで依存ライブラリ管理をする（Dependency management）</li>
<li>stackoverflowを愛することを学ぶ（Learn To Love Stack Overflow）</li>
<li>最新の環境を基準にし、古い環境ではレベルを落とす（Graceful Degradation）</li>
<li>カスタムフォントを使う（Custom Fonts）</li>
<li>最初から国際化する（Localize From The Start）</li>
<li>アプリのクラッシュをトラッキングする（Track Crashes）</li>
<li>解析する（Analyze）</li>
<li>Instrumentsを使う（Instruments）</li>
<li>レビューをトラッキングする（Track Reviews）</li>
</ul>


<h2>URLs</h2>

<ul>
<li><a href="http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today">iOS Development Tips I Would Want If I Was Starting Out Today</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vine]]></title>
    <link href="http://mochiz.github.com/blog/2013-02-27-vine/"/>
    <updated>2013-02-27T00:10:00+09:00</updated>
    <id>http://mochiz.github.com/blog/vine</id>
    <content type="html"><![CDATA[<p>Vineが貼り付けられるかテスト</p>

<blockquote class="twitter-tweet" lang="ja"><p>神田明神 <a href="http://t.co/LmUVb2hyhI" title="http://vine.co/v/bgXla2E1w9Z">vine.co/v/bgXla2E1w9Z</a></p>&mdash; qnypさん (@qnyp) <a href="https://twitter.com/qnyp/status/305875512755105792">2013年2月25日</a></blockquote>


<script async src="http://mochiz.github.com//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress]]></title>
    <link href="http://mochiz.github.com/blog/2013-02-26-octopress/"/>
    <updated>2013-02-26T20:21:00+09:00</updated>
    <id>http://mochiz.github.com/blog/octopress</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/">Octopress</a> + <a href="http://pages.github.com/">GitHub Pages</a><br/>
でブログをつくりなおしました。</p>

<h2>URLs</h2>

<ul>
<li><a href="http://octopress.org/">Octopress</a></li>
<li><a href="http://pages.github.com/">GitHub Pages</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
